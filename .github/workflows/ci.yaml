name: Github CI

on:
  push:
    branches: ['main']
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install --dev

      - name: Run tests with coverage
        run: |
          pipenv run coverage-xml

      - name: Send coverage to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install lint dependencies
        run: pip install flake8 mypy isort

      - name: flake8
        uses: liskin/gh-problem-matcher-wrap@v3
        with:
          linters: flake8
          run: flake8 --max-line-length=88 --ignore=E203,W503 src/
      - name: mypy
        uses: liskin/gh-problem-matcher-wrap@v3
        with:
          linters: mypy
          run: mypy --strict --show-column-numbers src/
      - name: isort
        uses: liskin/gh-problem-matcher-wrap@v3
        with:
          linters: isort
          run: isort --line-length=88 --check --profile black src/
